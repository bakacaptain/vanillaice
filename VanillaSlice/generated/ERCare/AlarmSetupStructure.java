// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `AlarmSetupStructure.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ERCare;

public class AlarmSetupStructure implements java.lang.Cloneable, java.io.Serializable
{
    public long minVal;

    public long maxVal;

    public String type;

    public String patID;

    public AlarmSetupStructure()
    {
    }

    public AlarmSetupStructure(long minVal, long maxVal, String type, String patID)
    {
        this.minVal = minVal;
        this.maxVal = maxVal;
        this.type = type;
        this.patID = patID;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        AlarmSetupStructure _r = null;
        if(rhs instanceof AlarmSetupStructure)
        {
            _r = (AlarmSetupStructure)rhs;
        }

        if(_r != null)
        {
            if(minVal != _r.minVal)
            {
                return false;
            }
            if(maxVal != _r.maxVal)
            {
                return false;
            }
            if(type != _r.type)
            {
                if(type == null || _r.type == null || !type.equals(_r.type))
                {
                    return false;
                }
            }
            if(patID != _r.patID)
            {
                if(patID == null || _r.patID == null || !patID.equals(_r.patID))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::ERCare::AlarmSetupStructure");
        __h = IceInternal.HashUtil.hashAdd(__h, minVal);
        __h = IceInternal.HashUtil.hashAdd(__h, maxVal);
        __h = IceInternal.HashUtil.hashAdd(__h, type);
        __h = IceInternal.HashUtil.hashAdd(__h, patID);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(minVal);
        __os.writeLong(maxVal);
        __os.writeString(type);
        __os.writeString(patID);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        minVal = __is.readLong();
        maxVal = __is.readLong();
        type = __is.readString();
        patID = __is.readString();
    }

    public static final long serialVersionUID = -2140007962L;
}
